/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsInt } from "class-validator";
import { UserExpenseRequestUpdateManyWithoutUserInfosInput } from "./UserExpenseRequestUpdateManyWithoutUserInfosInput";
import { Type } from "class-transformer";
import { UserTimeOffRequestUpdateManyWithoutUserInfosInput } from "./UserTimeOffRequestUpdateManyWithoutUserInfosInput";
import { UserTimeTrackingRequestUpdateManyWithoutUserInfosInput } from "./UserTimeTrackingRequestUpdateManyWithoutUserInfosInput";
import { CompanyCalendarUpdateManyWithoutUserInfosInput } from "./CompanyCalendarUpdateManyWithoutUserInfosInput";
import { CompanyNewUpdateManyWithoutUserInfosInput } from "./CompanyNewUpdateManyWithoutUserInfosInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { CompanyRecognitionUpdateManyWithoutUserInfosInput } from "./CompanyRecognitionUpdateManyWithoutUserInfosInput";
import { UserAssetUpdateManyWithoutUserInfosInput } from "./UserAssetUpdateManyWithoutUserInfosInput";
import { UserSurveyResponseUpdateManyWithoutUserInfosInput } from "./UserSurveyResponseUpdateManyWithoutUserInfosInput";

@InputType()
class UserInfoUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserExpenseRequestUpdateManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserExpenseRequestUpdateManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserExpenseRequestUpdateManyWithoutUserInfosInput, {
    nullable: true,
  })
  approverExpenseRequest?: UserExpenseRequestUpdateManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => UserTimeOffRequestUpdateManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserTimeOffRequestUpdateManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserTimeOffRequestUpdateManyWithoutUserInfosInput, {
    nullable: true,
  })
  approverTimeoffRequest?: UserTimeOffRequestUpdateManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => UserTimeTrackingRequestUpdateManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserTimeTrackingRequestUpdateManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserTimeTrackingRequestUpdateManyWithoutUserInfosInput, {
    nullable: true,
  })
  approverTimetrackingRequest?: UserTimeTrackingRequestUpdateManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  businessEmail?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  citizenship?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string | null;

  @ApiProperty({
    required: false,
    type: () => CompanyCalendarUpdateManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => CompanyCalendarUpdateManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => CompanyCalendarUpdateManyWithoutUserInfosInput, {
    nullable: true,
  })
  companyCalendar?: CompanyCalendarUpdateManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => CompanyNewUpdateManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => CompanyNewUpdateManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => CompanyNewUpdateManyWithoutUserInfosInput, {
    nullable: true,
  })
  companyNews?: CompanyNewUpdateManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  documents?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  educations?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  emergencyContacts?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  employeeNumber?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  gender?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  jobs?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  managerId?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  martialStatus?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nationality?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  personalEmail?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  postcode?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserExpenseRequestUpdateManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserExpenseRequestUpdateManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserExpenseRequestUpdateManyWithoutUserInfosInput, {
    nullable: true,
  })
  requesterExpenseRequest?: UserExpenseRequestUpdateManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => CompanyRecognitionUpdateManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => CompanyRecognitionUpdateManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => CompanyRecognitionUpdateManyWithoutUserInfosInput, {
    nullable: true,
  })
  requesterInfo?: CompanyRecognitionUpdateManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => UserTimeTrackingRequestUpdateManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserTimeTrackingRequestUpdateManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserTimeTrackingRequestUpdateManyWithoutUserInfosInput, {
    nullable: true,
  })
  requesterTimetrackingRequest?: UserTimeTrackingRequestUpdateManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  socialContacts?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  timeoffs?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => UserAssetUpdateManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserAssetUpdateManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserAssetUpdateManyWithoutUserInfosInput, {
    nullable: true,
  })
  userAsset?: UserAssetUpdateManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => CompanyRecognitionUpdateManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => CompanyRecognitionUpdateManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => CompanyRecognitionUpdateManyWithoutUserInfosInput, {
    nullable: true,
  })
  userInfo?: CompanyRecognitionUpdateManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => UserSurveyResponseUpdateManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserSurveyResponseUpdateManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserSurveyResponseUpdateManyWithoutUserInfosInput, {
    nullable: true,
  })
  userSurveyResponse?: UserSurveyResponseUpdateManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => UserTimeOffRequestUpdateManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserTimeOffRequestUpdateManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserTimeOffRequestUpdateManyWithoutUserInfosInput, {
    nullable: true,
  })
  userTimeoffRequest?: UserTimeOffRequestUpdateManyWithoutUserInfosInput;
}

export { UserInfoUpdateInput as UserInfoUpdateInput };
