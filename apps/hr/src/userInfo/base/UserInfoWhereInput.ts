/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { UserExpenseRequestListRelationFilter } from "../../userExpenseRequest/base/UserExpenseRequestListRelationFilter";
import { UserTimeOffRequestListRelationFilter } from "../../userTimeOffRequest/base/UserTimeOffRequestListRelationFilter";
import { UserTimeTrackingRequestListRelationFilter } from "../../userTimeTrackingRequest/base/UserTimeTrackingRequestListRelationFilter";
import { CompanyCalendarListRelationFilter } from "../../companyCalendar/base/CompanyCalendarListRelationFilter";
import { CompanyNewListRelationFilter } from "../../companyNew/base/CompanyNewListRelationFilter";
import { JsonFilter } from "../../util/JsonFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { CompanyRecognitionListRelationFilter } from "../../companyRecognition/base/CompanyRecognitionListRelationFilter";
import { UserAssetListRelationFilter } from "../../userAsset/base/UserAssetListRelationFilter";
import { UserSurveyResponseListRelationFilter } from "../../userSurveyResponse/base/UserSurveyResponseListRelationFilter";

@InputType()
class UserInfoWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  address?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserExpenseRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserExpenseRequestListRelationFilter)
  @IsOptional()
  @Field(() => UserExpenseRequestListRelationFilter, {
    nullable: true,
  })
  approverExpenseRequest?: UserExpenseRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserTimeOffRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserTimeOffRequestListRelationFilter)
  @IsOptional()
  @Field(() => UserTimeOffRequestListRelationFilter, {
    nullable: true,
  })
  approverTimeoffRequest?: UserTimeOffRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserTimeTrackingRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserTimeTrackingRequestListRelationFilter)
  @IsOptional()
  @Field(() => UserTimeTrackingRequestListRelationFilter, {
    nullable: true,
  })
  approverTimetrackingRequest?: UserTimeTrackingRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  businessEmail?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  citizenship?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  city?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => CompanyCalendarListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CompanyCalendarListRelationFilter)
  @IsOptional()
  @Field(() => CompanyCalendarListRelationFilter, {
    nullable: true,
  })
  companyCalendar?: CompanyCalendarListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CompanyNewListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CompanyNewListRelationFilter)
  @IsOptional()
  @Field(() => CompanyNewListRelationFilter, {
    nullable: true,
  })
  companyNews?: CompanyNewListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  country?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  documents?: JsonFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  educations?: JsonFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  emergencyContacts?: JsonFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  employeeNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  gender?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  jobs?: JsonFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  managerId?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  martialStatus?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  nationality?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  personalEmail?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phone?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  postcode?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserExpenseRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserExpenseRequestListRelationFilter)
  @IsOptional()
  @Field(() => UserExpenseRequestListRelationFilter, {
    nullable: true,
  })
  requesterExpenseRequest?: UserExpenseRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CompanyRecognitionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CompanyRecognitionListRelationFilter)
  @IsOptional()
  @Field(() => CompanyRecognitionListRelationFilter, {
    nullable: true,
  })
  requesterInfo?: CompanyRecognitionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserTimeTrackingRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserTimeTrackingRequestListRelationFilter)
  @IsOptional()
  @Field(() => UserTimeTrackingRequestListRelationFilter, {
    nullable: true,
  })
  requesterTimetrackingRequest?: UserTimeTrackingRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  socialContacts?: JsonFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  timeoffs?: JsonFilter;

  @ApiProperty({
    required: false,
    type: () => UserAssetListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserAssetListRelationFilter)
  @IsOptional()
  @Field(() => UserAssetListRelationFilter, {
    nullable: true,
  })
  userAsset?: UserAssetListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CompanyRecognitionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CompanyRecognitionListRelationFilter)
  @IsOptional()
  @Field(() => CompanyRecognitionListRelationFilter, {
    nullable: true,
  })
  userInfo?: CompanyRecognitionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserSurveyResponseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserSurveyResponseListRelationFilter)
  @IsOptional()
  @Field(() => UserSurveyResponseListRelationFilter, {
    nullable: true,
  })
  userSurveyResponse?: UserSurveyResponseListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserTimeOffRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserTimeOffRequestListRelationFilter)
  @IsOptional()
  @Field(() => UserTimeOffRequestListRelationFilter, {
    nullable: true,
  })
  userTimeoffRequest?: UserTimeOffRequestListRelationFilter;
}

export { UserInfoWhereInput as UserInfoWhereInput };
