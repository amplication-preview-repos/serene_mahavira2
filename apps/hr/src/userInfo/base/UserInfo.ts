/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsInt } from "class-validator";
import { UserExpenseRequest } from "../../userExpenseRequest/base/UserExpenseRequest";
import { Type } from "class-transformer";
import { UserTimeOffRequest } from "../../userTimeOffRequest/base/UserTimeOffRequest";
import { UserTimeTrackingRequest } from "../../userTimeTrackingRequest/base/UserTimeTrackingRequest";
import { CompanyCalendar } from "../../companyCalendar/base/CompanyCalendar";
import { CompanyNew } from "../../companyNew/base/CompanyNew";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { CompanyRecognition } from "../../companyRecognition/base/CompanyRecognition";
import { UserAsset } from "../../userAsset/base/UserAsset";
import { UserSurveyResponse } from "../../userSurveyResponse/base/UserSurveyResponse";

@ObjectType()
class UserInfo {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address!: string | null;

  @ApiProperty({
    required: false,
    type: () => [UserExpenseRequest],
  })
  @ValidateNested()
  @Type(() => UserExpenseRequest)
  @IsOptional()
  approverExpenseRequest?: Array<UserExpenseRequest>;

  @ApiProperty({
    required: false,
    type: () => [UserTimeOffRequest],
  })
  @ValidateNested()
  @Type(() => UserTimeOffRequest)
  @IsOptional()
  approverTimeoffRequest?: Array<UserTimeOffRequest>;

  @ApiProperty({
    required: false,
    type: () => [UserTimeTrackingRequest],
  })
  @ValidateNested()
  @Type(() => UserTimeTrackingRequest)
  @IsOptional()
  approverTimetrackingRequest?: Array<UserTimeTrackingRequest>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  businessEmail!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  citizenship!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city!: string | null;

  @ApiProperty({
    required: false,
    type: () => [CompanyCalendar],
  })
  @ValidateNested()
  @Type(() => CompanyCalendar)
  @IsOptional()
  companyCalendar?: Array<CompanyCalendar>;

  @ApiProperty({
    required: false,
    type: () => [CompanyNew],
  })
  @ValidateNested()
  @Type(() => CompanyNew)
  @IsOptional()
  companyNews?: Array<CompanyNew>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country!: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  documents!: JsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  educations!: JsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  emergencyContacts!: JsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  employeeNumber!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  gender!: number | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  jobs!: JsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  managerId!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  martialStatus!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nationality!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  personalEmail!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  postcode!: string | null;

  @ApiProperty({
    required: false,
    type: () => [UserExpenseRequest],
  })
  @ValidateNested()
  @Type(() => UserExpenseRequest)
  @IsOptional()
  requesterExpenseRequest?: Array<UserExpenseRequest>;

  @ApiProperty({
    required: false,
    type: () => [CompanyRecognition],
  })
  @ValidateNested()
  @Type(() => CompanyRecognition)
  @IsOptional()
  requesterInfo?: Array<CompanyRecognition>;

  @ApiProperty({
    required: false,
    type: () => [UserTimeTrackingRequest],
  })
  @ValidateNested()
  @Type(() => UserTimeTrackingRequest)
  @IsOptional()
  requesterTimetrackingRequest?: Array<UserTimeTrackingRequest>;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  socialContacts!: JsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  timeoffs!: JsonValue;

  @ApiProperty({
    required: false,
    type: () => [UserAsset],
  })
  @ValidateNested()
  @Type(() => UserAsset)
  @IsOptional()
  userAsset?: Array<UserAsset>;

  @ApiProperty({
    required: false,
    type: () => [CompanyRecognition],
  })
  @ValidateNested()
  @Type(() => CompanyRecognition)
  @IsOptional()
  userInfo?: Array<CompanyRecognition>;

  @ApiProperty({
    required: false,
    type: () => [UserSurveyResponse],
  })
  @ValidateNested()
  @Type(() => UserSurveyResponse)
  @IsOptional()
  userSurveyResponse?: Array<UserSurveyResponse>;

  @ApiProperty({
    required: false,
    type: () => [UserTimeOffRequest],
  })
  @ValidateNested()
  @Type(() => UserTimeOffRequest)
  @IsOptional()
  userTimeoffRequest?: Array<UserTimeOffRequest>;
}

export { UserInfo as UserInfo };
