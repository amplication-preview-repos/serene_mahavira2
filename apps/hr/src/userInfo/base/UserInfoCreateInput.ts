/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsInt } from "class-validator";
import { UserExpenseRequestCreateNestedManyWithoutUserInfosInput } from "./UserExpenseRequestCreateNestedManyWithoutUserInfosInput";
import { Type } from "class-transformer";
import { UserTimeOffRequestCreateNestedManyWithoutUserInfosInput } from "./UserTimeOffRequestCreateNestedManyWithoutUserInfosInput";
import { UserTimeTrackingRequestCreateNestedManyWithoutUserInfosInput } from "./UserTimeTrackingRequestCreateNestedManyWithoutUserInfosInput";
import { CompanyCalendarCreateNestedManyWithoutUserInfosInput } from "./CompanyCalendarCreateNestedManyWithoutUserInfosInput";
import { CompanyNewCreateNestedManyWithoutUserInfosInput } from "./CompanyNewCreateNestedManyWithoutUserInfosInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { CompanyRecognitionCreateNestedManyWithoutUserInfosInput } from "./CompanyRecognitionCreateNestedManyWithoutUserInfosInput";
import { UserAssetCreateNestedManyWithoutUserInfosInput } from "./UserAssetCreateNestedManyWithoutUserInfosInput";
import { UserSurveyResponseCreateNestedManyWithoutUserInfosInput } from "./UserSurveyResponseCreateNestedManyWithoutUserInfosInput";

@InputType()
class UserInfoCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserExpenseRequestCreateNestedManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserExpenseRequestCreateNestedManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserExpenseRequestCreateNestedManyWithoutUserInfosInput, {
    nullable: true,
  })
  approverExpenseRequest?: UserExpenseRequestCreateNestedManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => UserTimeOffRequestCreateNestedManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserTimeOffRequestCreateNestedManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserTimeOffRequestCreateNestedManyWithoutUserInfosInput, {
    nullable: true,
  })
  approverTimeoffRequest?: UserTimeOffRequestCreateNestedManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => UserTimeTrackingRequestCreateNestedManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserTimeTrackingRequestCreateNestedManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserTimeTrackingRequestCreateNestedManyWithoutUserInfosInput, {
    nullable: true,
  })
  approverTimetrackingRequest?: UserTimeTrackingRequestCreateNestedManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  businessEmail?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  citizenship?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string | null;

  @ApiProperty({
    required: false,
    type: () => CompanyCalendarCreateNestedManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => CompanyCalendarCreateNestedManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => CompanyCalendarCreateNestedManyWithoutUserInfosInput, {
    nullable: true,
  })
  companyCalendar?: CompanyCalendarCreateNestedManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => CompanyNewCreateNestedManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => CompanyNewCreateNestedManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => CompanyNewCreateNestedManyWithoutUserInfosInput, {
    nullable: true,
  })
  companyNews?: CompanyNewCreateNestedManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  documents?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  educations?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  emergencyContacts?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  employeeNumber?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  gender?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  jobs?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  managerId?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  martialStatus?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nationality?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  personalEmail?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  postcode?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserExpenseRequestCreateNestedManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserExpenseRequestCreateNestedManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserExpenseRequestCreateNestedManyWithoutUserInfosInput, {
    nullable: true,
  })
  requesterExpenseRequest?: UserExpenseRequestCreateNestedManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => CompanyRecognitionCreateNestedManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => CompanyRecognitionCreateNestedManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => CompanyRecognitionCreateNestedManyWithoutUserInfosInput, {
    nullable: true,
  })
  requesterInfo?: CompanyRecognitionCreateNestedManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => UserTimeTrackingRequestCreateNestedManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserTimeTrackingRequestCreateNestedManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserTimeTrackingRequestCreateNestedManyWithoutUserInfosInput, {
    nullable: true,
  })
  requesterTimetrackingRequest?: UserTimeTrackingRequestCreateNestedManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  socialContacts?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  timeoffs?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => UserAssetCreateNestedManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserAssetCreateNestedManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserAssetCreateNestedManyWithoutUserInfosInput, {
    nullable: true,
  })
  userAsset?: UserAssetCreateNestedManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => CompanyRecognitionCreateNestedManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => CompanyRecognitionCreateNestedManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => CompanyRecognitionCreateNestedManyWithoutUserInfosInput, {
    nullable: true,
  })
  userInfo?: CompanyRecognitionCreateNestedManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => UserSurveyResponseCreateNestedManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserSurveyResponseCreateNestedManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserSurveyResponseCreateNestedManyWithoutUserInfosInput, {
    nullable: true,
  })
  userSurveyResponse?: UserSurveyResponseCreateNestedManyWithoutUserInfosInput;

  @ApiProperty({
    required: false,
    type: () => UserTimeOffRequestCreateNestedManyWithoutUserInfosInput,
  })
  @ValidateNested()
  @Type(() => UserTimeOffRequestCreateNestedManyWithoutUserInfosInput)
  @IsOptional()
  @Field(() => UserTimeOffRequestCreateNestedManyWithoutUserInfosInput, {
    nullable: true,
  })
  userTimeoffRequest?: UserTimeOffRequestCreateNestedManyWithoutUserInfosInput;
}

export { UserInfoCreateInput as UserInfoCreateInput };
