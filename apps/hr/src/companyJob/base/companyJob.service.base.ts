/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CompanyJob } from "@prisma/client";

export class CompanyJobServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.CompanyJobCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.CompanyJobCountArgs>
  ): Promise<number> {
    return this.prisma.companyJob.count(args);
  }

  async companyJobs<T extends Prisma.CompanyJobFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CompanyJobFindManyArgs>
  ): Promise<CompanyJob[]> {
    return this.prisma.companyJob.findMany(args);
  }
  async companyJob<T extends Prisma.CompanyJobFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CompanyJobFindUniqueArgs>
  ): Promise<CompanyJob | null> {
    return this.prisma.companyJob.findUnique(args);
  }
  async createCompanyJob<T extends Prisma.CompanyJobCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CompanyJobCreateArgs>
  ): Promise<CompanyJob> {
    return this.prisma.companyJob.create<T>(args);
  }
  async updateCompanyJob<T extends Prisma.CompanyJobUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CompanyJobUpdateArgs>
  ): Promise<CompanyJob> {
    return this.prisma.companyJob.update<T>(args);
  }
  async deleteCompanyJob<T extends Prisma.CompanyJobDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CompanyJobDeleteArgs>
  ): Promise<CompanyJob> {
    return this.prisma.companyJob.delete(args);
  }
}
