/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserNotification } from "@prisma/client";

export class UserNotificationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.UserNotificationCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserNotificationCountArgs>
  ): Promise<number> {
    return this.prisma.userNotification.count(args);
  }

  async userNotifications<T extends Prisma.UserNotificationFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserNotificationFindManyArgs>
  ): Promise<UserNotification[]> {
    return this.prisma.userNotification.findMany(args);
  }
  async userNotification<T extends Prisma.UserNotificationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserNotificationFindUniqueArgs>
  ): Promise<UserNotification | null> {
    return this.prisma.userNotification.findUnique(args);
  }
  async createUserNotification<T extends Prisma.UserNotificationCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserNotificationCreateArgs>
  ): Promise<UserNotification> {
    return this.prisma.userNotification.create<T>(args);
  }
  async updateUserNotification<T extends Prisma.UserNotificationUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserNotificationUpdateArgs>
  ): Promise<UserNotification> {
    return this.prisma.userNotification.update<T>(args);
  }
  async deleteUserNotification<T extends Prisma.UserNotificationDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserNotificationDeleteArgs>
  ): Promise<UserNotification> {
    return this.prisma.userNotification.delete(args);
  }
}
