/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CompanyDocument } from "@prisma/client";

export class CompanyDocumentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.CompanyDocumentCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.CompanyDocumentCountArgs>
  ): Promise<number> {
    return this.prisma.companyDocument.count(args);
  }

  async companyDocuments<T extends Prisma.CompanyDocumentFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CompanyDocumentFindManyArgs>
  ): Promise<CompanyDocument[]> {
    return this.prisma.companyDocument.findMany(args);
  }
  async companyDocument<T extends Prisma.CompanyDocumentFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CompanyDocumentFindUniqueArgs>
  ): Promise<CompanyDocument | null> {
    return this.prisma.companyDocument.findUnique(args);
  }
  async createCompanyDocument<T extends Prisma.CompanyDocumentCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CompanyDocumentCreateArgs>
  ): Promise<CompanyDocument> {
    return this.prisma.companyDocument.create<T>(args);
  }
  async updateCompanyDocument<T extends Prisma.CompanyDocumentUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CompanyDocumentUpdateArgs>
  ): Promise<CompanyDocument> {
    return this.prisma.companyDocument.update<T>(args);
  }
  async deleteCompanyDocument<T extends Prisma.CompanyDocumentDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CompanyDocumentDeleteArgs>
  ): Promise<CompanyDocument> {
    return this.prisma.companyDocument.delete(args);
  }
}
